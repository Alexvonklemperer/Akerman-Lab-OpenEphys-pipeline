function distribute_sorted_data(sorted_ephys_data,parent_folder)
% function distribute_sorted_data(SORTED_EPHYS_DATA,PARENT_FOLDER)
% 
% Save SORTED_EPHYS_DATA in a folder structure hierarchically organised
% by experiment type (1st level) and then by '[experiment date]_ 
% [implantation number]' (2nd level).
%
% SORTED_EPHYS_DATA is the sorted ephys data structure generated by the 
% SYNC_KILOSORT_SPIKES function, containing all the sorted experiments for
% a particular run of Kilosort (from the same date/implantation)
% 
% PARENT_FOLDER is the overarching folder containing the experiment type
% folders that contain the individual experiment date/implantation folders.
%
% This makes the folder structure completely equivalent to the folder structure
% for non-sorted multiunit data organised by channel, and it should make the
% sorted data completely compatible with any of the multiunit data analysis
% scripts.
% 
% 

% Safer to only copy to an existing parent folder; will throw error if it 
% does not exist
if ~isdir(parent_folder)
    error(['Folder ' parent_folder ' does not exist!'])
end

for a = 1:length(sorted_ephys_data)
    
    % Give single experiment variable the name 'ephys_data' so that loading 
    % it later will be compatible with the way the multiunit data is stored
    ephys_data              = sorted_ephys_data(a);
    
    % Experiment folder
    experiment_type         = ephys_data.parameters.experiment_type;
    
    % Date and implantation nr
    experiment_date         = ephys_data.parameters.experiment_date;
    implantation_nr         = num2str(ephys_data.parameters.implantation_nr);
    implantation_folder     = [experiment_date '_' implantation_nr];
    
    % Make string 'parent_folder/experiment_type/implantation_folder'
    full_folder_name        = fullfile(parent_folder, experiment_type, implantation_folder);
    
    % Create this folder if it does not yet exist
    if ~isdir(full_folder_name)
        mkdir(full_folder_name)
    end
    
    % Use date and recording number to make name for saving the ephys_data
    rec_number              = num2str(ephys_data.parameters.recording_nr);
    file_name               = [experiment_date '-' rec_number '-' experiment_type];
    
    % Generate the full file name
    full_file_name          = fullfile(full_folder_name, file_name);
    
    % Save
    disp(['Saving ' full_file_name '...'])
    save(full_file_name,'ephys_data');
end